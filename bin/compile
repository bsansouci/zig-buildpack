#!/usr/bin/env bash

# Usage:
#
#     $ bin/compile <build-dir> <cache-dir>


# Fail fast and fail hard.
set -eo pipefail

[ "$BUILDPACK_XTRACE" ] && set -o xtrace

# Prepend proper path for virtualenv hackery. This will be deprecated soon.
export PATH=:/usr/local/bin:$PATH

# Paths.
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2

CACHED_DIRS=".heroku"

# Static configurations for virtualenv caches.
PROFILE_PATH="$BUILD_DIR/.profile.d/ziglang.sh"

# Sanitizing environment variables.
unset GIT_DIR LD_LIBRARY_PATH LIBRARY_PATH

# We'll need to send these statics to other scripts we `source`.
export BUILD_DIR CACHE_DIR BIN_DIR PROFILE_PATH

# Set the Buildpack's internet target for downloading Miniconda distributions.
# The user can provide BUILDPACK_ZIGLANG_URL to specify a custom target.
# Note: this is designed for non-Heroku use, as it does not use the user-provided
# environment variable mechanism (the ENV_DIR).
ZIGLANG_URL="https://ziglang.org"
if [[ -n ${BUILDPACK_ZIGLANG_URL:-} ]]; then
    ZIGLANG_URL="$BUILDPACK_ZIGLANG_URL"
fi
export ZIGLANG_URL

# Syntax sugar.
source $BIN_DIR/utils

# Directory Hacks for path consistiency.
APP_DIR='/app'
TMP_APP_DIR=$CACHE_DIR/tmp_app_dir

# Copy Anvil app dir to temporary storage...
mkdir -p $TMP_APP_DIR
deep-mv $APP_DIR $TMP_APP_DIR

# Copy Application code in.
deep-mv $BUILD_DIR $APP_DIR

# Set new context.
ORIG_BUILD_DIR=$BUILD_DIR
BUILD_DIR=$APP_DIR

# Prepend proper path buildpack use.
export PATH=$BUILD_DIR/.heroku/ziglang:$PATH
export LANG=en_US.UTF-8

# Switch to the repo's context.
cd $BUILD_DIR

# Experimental pre_compile hook.
source $BIN_DIR/steps/hooks/pre_compile

# ### The Cache
mkdir -p $CACHE_DIR

# Restore old artifacts from the cache.
for dir in $CACHED_DIRS; do
  cp -R $CACHE_DIR/$dir . &> /dev/null || true
done

set +e
# Create set-aside `.heroku` folder.
mkdir .heroku &> /dev/null
set -e

# Make profile.d directory.
mkdir -p $(dirname $PROFILE_PATH)

# Actually do the build steps.
source $BIN_DIR/steps/zig_compile

# ### Finalize
#

# Store new artifacts in cache.
for dir in $CACHED_DIRS; do
  rm -rf $CACHE_DIR/$dir
  cp -R $dir $CACHE_DIR/
done

# Set context environment variables.
set-env PATH '$HOME/.heroku/ziglang:$PATH'
set-default-env LANG en_US.UTF-8


# Experimental post_compile hook.
source $BIN_DIR/steps/hooks/post_compile

# ### Fin.

deep-mv $BUILD_DIR $ORIG_BUILD_DIR
deep-mv $TMP_APP_DIR $APP_DIR
